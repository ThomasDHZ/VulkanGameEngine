using Silk.NET.Core.Attributes;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace VulkanGameEngineLevelEditor.Vulkan
{
    [Flags]
    public enum VkPipelineStageFlags
    {
        TOP_OF_PIPE_BIT = 0x00000001,
        DRAW_INDIRECT_BIT = 0x00000002,
        VERTEX_INPUT_BIT = 0x00000004,
        VERTEX_SHADER_BIT = 0x00000008,
        TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,
        TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,
        GEOMETRY_SHADER_BIT = 0x00000040,
        FRAGMENT_SHADER_BIT = 0x00000080,
        EARLY_FRAGMENT_TESTS_BIT = 0x00000100,
        LATE_FRAGMENT_TESTS_BIT = 0x00000200,
        COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,
        COMPUTE_SHADER_BIT = 0x00000800,
        TRANSFER_BIT = 0x00001000,
        BOTTOM_OF_PIPE_BIT = 0x00002000,
        HOST_BIT = 0x00004000,
        ALL_GRAPHICS_BIT = 0x00008000,
        ALL_COMMANDS_BIT = 0x00010000,
        NONE = 0,
        TRANSFORM_FEEDBACK_BIT_EXT = 0x01000000,
        CONDITIONAL_RENDERING_BIT_EXT = 0x00040000,
        ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 0x02000000,
        RAY_TRACING_SHADER_BIT_KHR = 0x00200000,
        FRAGMENT_DENSITY_PROCESS_BIT_EXT = 0x00800000,
        FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x00400000,
        COMMAND_PREPROCESS_BIT_NV = 0x00020000,
        TASK_SHADER_BIT_EXT = 0x00080000,
        MESH_SHADER_BIT_EXT = 0x00100000,
        SHADING_RATE_IMAGE_BIT_NV = FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
        RAY_TRACING_SHADER_BIT_NV = RAY_TRACING_SHADER_BIT_KHR,
        ACCELERATION_STRUCTURE_BUILD_BIT_NV = ACCELERATION_STRUCTURE_BUILD_BIT_KHR,
        TASK_SHADER_BIT_NV = TASK_SHADER_BIT_EXT,
        MESH_SHADER_BIT_NV = MESH_SHADER_BIT_EXT,
        FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
    }

    [Flags]
    public enum VkAccessFlags
    {
        INDIRECT_COMMAND_READ_BIT = 0x00000001,
        INDEX_READ_BIT = 0x00000002,
        VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,
        UNIFORM_READ_BIT = 0x00000008,
        INPUT_ATTACHMENT_READ_BIT = 0x00000010,
        SHADER_READ_BIT = 0x00000020,
        SHADER_WRITE_BIT = 0x00000040,
        COLOR_ATTACHMENT_READ_BIT = 0x00000080,
        COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,
        DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,
        DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,
        TRANSFER_READ_BIT = 0x00000800,
        TRANSFER_WRITE_BIT = 0x00001000,
        HOST_READ_BIT = 0x00002000,
        HOST_WRITE_BIT = 0x00004000,
        MEMORY_READ_BIT = 0x00008000,
        MEMORY_WRITE_BIT = 0x00010000,
        NONE = 0,
        TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 0x02000000,
        TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 0x04000000,
        TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 0x08000000,
        CONDITIONAL_RENDERING_READ_BIT_EXT = 0x00100000,
        COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 0x00080000,
        ACCELERATION_STRUCTURE_READ_BIT_KHR = 0x00200000,
        ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 0x00400000,
        FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 0x01000000,
        FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 0x00800000,
        COMMAND_PREPROCESS_READ_BIT_NV = 0x00020000,
        COMMAND_PREPROCESS_WRITE_BIT_NV = 0x00040000,
        SHADING_RATE_IMAGE_READ_BIT_NV = FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR,
        ACCELERATION_STRUCTURE_READ_BIT_NV = ACCELERATION_STRUCTURE_READ_BIT_KHR,
        ACCELERATION_STRUCTURE_WRITE_BIT_NV = ACCELERATION_STRUCTURE_WRITE_BIT_KHR,
        FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
    }

    [Flags]
    public enum VkDependencyFlags
    {
        VK_DEPENDENCY_BY_REGION_BIT = 0x00000001,
        VK_DEPENDENCY_DEVICE_GROUP_BIT = 0x00000004,
        VK_DEPENDENCY_VIEW_LOCAL_BIT = 0x00000002,
        VK_DEPENDENCY_FEEDBACK_LOOP_BIT_EXT = 0x00000008,
        VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR = VK_DEPENDENCY_VIEW_LOCAL_BIT,
        VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR = VK_DEPENDENCY_DEVICE_GROUP_BIT,
        VK_DEPENDENCY_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
    }

    public enum DescriptorBindingPropertiesEnum
    {
        kModelTransformDescriptor,
        kMeshPropertiesDescriptor,
        kTextureDescriptor,
        kMaterialDescriptor,
        kBRDFMapDescriptor,
        kIrradianceMapDescriptor,
        kPrefilterMapDescriptor,
        kCubeMapDescriptor,
        kEnvironmentDescriptor,
        kSunLightDescriptor,
        kDirectionalLightDescriptor,
        kPointLightDescriptor,
        kSpotLightDescriptor,
        kReflectionViewDescriptor,
        kDirectionalShadowDescriptor,
        kPointShadowDescriptor,
        kSpotShadowDescriptor,
        kViewTextureDescriptor,
        kViewDepthTextureDescriptor,
        kCubeMapSamplerDescriptor,
        kRotatingPaletteTextureDescriptor,
        kMathOpperation1Descriptor,
        kMathOpperation2Descriptor,
    };
}
