namespace VulkanGameEngineLevelEditor.GameEngineAPI
{
    public class InputConsts
    {
        public const int MAXMOUSEKEY = 3;
        public const int MAXKEYBOARDKEY = 350;
    }

    public enum InputKey : int
    {
        INPUTKEY_UNKNOWN = -1,
        INPUTKEY_RETURN = 13,
        INPUTKEY_ESCAPE = 27,
        INPUTKEY_BACKSPACE = 8,
        INPUTKEY_TAB = 9,
        INPUTKEY_SPACE = 32,
        INPUTKEY_EXCLAIM = 33,
        INPUTKEY_QUOTEDBL = 34,
        INPUTKEY_HASH = 35,
        INPUTKEY_PERCENT = 37,
        INPUTKEY_DOLLAR = 36,
        INPUTKEY_AMPERSAND = 38,
        INPUTKEY_QUOTE = 39,
        INPUTKEY_LEFTPAREN = 40,
        INPUTKEY_RIGHTPAREN = 41,
        INPUTKEY_ASTERISK = 42,
        INPUTKEY_PLUS = 43,
        INPUTKEY_COMMA = 44,
        INPUTKEY_MINUS = 45,
        INPUTKEY_PERIOD = 46,
        INPUTKEY_SLASH = 47,
        INPUTKEY_0 = 48,
        INPUTKEY_1 = 49,
        INPUTKEY_2 = 50,
        INPUTKEY_3 = 51,
        INPUTKEY_4 = 52,
        INPUTKEY_5 = 53,
        INPUTKEY_6 = 54,
        INPUTKEY_7 = 55,
        INPUTKEY_8 = 56,
        INPUTKEY_9 = 57,
        INPUTKEY_COLON = 58,
        INPUTKEY_SEMICOLON = 59,
        INPUTKEY_LESS = 60,
        INPUTKEY_EQUALS = 61,
        INPUTKEY_GREATER = 62,
        INPUTKEY_QUESTION = 63,
        INPUTKEY_AT = 64,
        INPUTKEY_LEFTBRACKET = 91,
        INPUTKEY_BACKSLASH = 92,
        INPUTKEY_RIGHTBRACKET = 93,
        INPUTKEY_CARET = 94,
        INPUTKEY_UNDERSCORE = 95,
        INPUTKEY_BACKQUOTE = 96,
        INPUTKEY_A = 97,
        INPUTKEY_B = 98,
        INPUTKEY_C = 99,
        INPUTKEY_D = 100,
        INPUTKEY_E = 101,
        INPUTKEY_F = 102,
        INPUTKEY_G = 103,
        INPUTKEY_H = 104,
        INPUTKEY_I = 105,
        INPUTKEY_J = 106,
        INPUTKEY_K = 107,
        INPUTKEY_L = 108,
        INPUTKEY_M = 109,
        INPUTKEY_N = 110,
        INPUTKEY_O = 111,
        INPUTKEY_P = 112,
        INPUTKEY_Q = 113,
        INPUTKEY_R = 114,
        INPUTKEY_S = 115,
        INPUTKEY_T = 116,
        INPUTKEY_U = 117,
        INPUTKEY_V = 118,
        INPUTKEY_W = 119,
        INPUTKEY_X = 120,
        INPUTKEY_Y = 121,
        INPUTKEY_Z = 122,
        INPUTKEY_INSERT = 260,
        INPUTKEY_DELETE = 261,
        INPUTKEY_RIGHT = 262,
        INPUTKEY_LEFT = 263,
        INPUTKEY_DOWN = 264,
        INPUTKEY_UP = 265,
        INPUTKEY_PAGEUP = 266,
        INPUTKEY_PAGEDOWN = 267,
        INPUTKEY_HOME = 268,
        INPUTKEY_END = 269,
        INPUTKEY_CAPSLOCK = 280,
        INPUTKEY_SCROLLLOCK = 281,
        INPUTKEY_NUMLOCKCLEAR = 282,
        INPUTKEY_PRINTSCREEN = 283,
        INPUTKEY_PAUSE = 284,
        INPUTKEY_F1 = 290,
        INPUTKEY_F2 = 291,
        INPUTKEY_F3 = 292,
        INPUTKEY_F4 = 293,
        INPUTKEY_F5 = 294,
        INPUTKEY_F6 = 295,
        INPUTKEY_F7 = 296,
        INPUTKEY_F8 = 297,
        INPUTKEY_F9 = 298,
        INPUTKEY_F10 = 299,
        INPUTKEY_F11 = 300,
        INPUTKEY_F12 = 301,
        INPUTKEY_F13 = 302,
        INPUTKEY_F14 = 303,
        INPUTKEY_F15 = 304,
        INPUTKEY_F16 = 305,
        INPUTKEY_F17 = 306,
        INPUTKEY_F18 = 307,
        INPUTKEY_F19 = 308,
        INPUTKEY_F20 = 309,
        INPUTKEY_F21 = 310,
        INPUTKEY_F22 = 311,
        INPUTKEY_F23 = 312,
        INPUTKEY_F24 = 313,
        INPUTKEY_KP_1 = 320,
        INPUTKEY_KP_2 = 321,
        INPUTKEY_KP_3 = 322,
        INPUTKEY_KP_4 = 323,
        INPUTKEY_KP_5 = 324,
        INPUTKEY_KP_6 = 325,
        INPUTKEY_KP_7 = 326,
        INPUTKEY_KP_8 = 327,
        INPUTKEY_KP_9 = 328,
        INPUTKEY_KP_0 = 329,
        INPUTKEY_KP_PERIOD = 330,
        INPUTKEY_KP_DIVIDE = 331,
        INPUTKEY_KP_MULTIPLY = 332,
        INPUTKEY_KP_MINUS = 333,
        INPUTKEY_KP_PLUS = 334,
        INPUTKEY_KP_ENTER = 335,
        INPUTKEY_KP_EQUALS = 336,
        INPUTKEY_LSHIFT = 340,
        INPUTKEY_LCTRL = 341,
        INPUTKEY_LALT = 342,
        INPUTKEY_RSHIFT = 344,
        INPUTKEY_RCTRL = 345,
        INPUTKEY_RALT = 346,
        INPUTKEY_MENU = 348
    };

    public enum KeyState
    {
        KS_RELEASED,
        KS_PRESSED,
        KS_HELD
    };

    public class KeyboardState
    {
        public KeyState[] KeyPressed = new KeyState[InputConsts.MAXKEYBOARDKEY];
    };
}
